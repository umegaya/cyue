# libnbr setting.
# where nbr dir placed?
NBRDIR="../nbr"
# place nbr lib and header stores
NBRHDRDIR="util/nbr"
# required nbr header
NBRHDR=["nbr.h", "mem.h", "osdep.h", "str.h"]
# base library name
NBRPFX="libnbr"

def nbrlib_name(cpu32bit, config)
	NBRPFX + (cpu32bit ? "32" : "") +
		((config == :debug) ? "_d" : "") + ".a"
end
def nbrpath(cpu32bit, config)
	NBRHDRDIR + "/" + nbrlib_name(cpu32bit, config)
end
task :prebuild do |t, args|
	nbr = nbrpath(BuildHelper::Util.is_32bit_cpu, args[:buildtarget].cfg)
	p "nbrlib = " + nbr
	args[:buildtarget].exlibs.push(nbr)
end
task :nbr do
	is32bit = BuildHelper::Util.is_32bit_cpu
	sh "make -C #{NBRDIR} #{is32bit ? "MARCH=i686" : ""} clean all"
	sh "cp #{NBRDIR}/#{NBRPFX}.a #{nbrpath(is32bit, :debug)}"
	sh "make -C #{NBRDIR} DEBUG=0 #{is32bit ? "MARCH=i686" : ""} clean all"
	sh "cp #{NBRDIR}/#{NBRPFX}.a #{nbrpath(is32bit, :release)}"
	NBRHDR.each do |f|
		sh "cp #{NBRDIR}/core/#{f} #{NBRHDRDIR}/#{f}"
	end
end

