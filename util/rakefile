# libnbr setting.
# where nbr dir placed?
NBRDIR="util/nbr/"
# place nbr lib and header stores
NBRHDRDIR="util/nbr/core"
# required nbr header
NBRHDR=["nbr.h", "mem.h", "osdep.h", "str.h"]
# base library name
NBRPFX="libnbr"

def nbrlib_name(cpu32bit, config)
	NBRPFX + ".a" # + (cpu32bit ? "32" : "") +
		#((config == :debug) ? "_d" : "") + ".a"
end
def nbrpath(cpu32bit, config)
	NBRDIR + "/" + nbrlib_name(cpu32bit, config)
end
task :prebuild do |t, args|
	nbr = nbrpath(BuildHelper::Util.is_32bit_cpu, args[:buildtarget].cfg)
	p "nbrlib = " + nbr
	args[:buildtarget].incs.push(NBRHDRDIR)
	args[:buildtarget].exlibs.push(nbr)
end
task :nbr do |t, args|
	is32bit = BuildHelper::Util.is_32bit_cpu
	option = "DEBUG=0"
	case args[:buildtarget].cfg
	when :debug
		option = ""
	when :verbose
		option = ""
	else
		raise "no! I build with debug!"
	end
	#p "[#{option}] =====> " + (args[:buildtarget].cfg).to_s
	sh "make -C #{NBRDIR} #{option} #{is32bit ? "MARCH=i686" : ""} all"
end
task :nbr_clean do
	is32bit = BuildHelper::Util.is_32bit_cpu
	sh "make -C #{NBRDIR} #{is32bit ? "MARCH=i686" : ""} cleanup"
end
